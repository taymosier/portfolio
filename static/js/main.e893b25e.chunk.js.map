{"version":3,"sources":["data/canoe.png","helpers.js","Components/ChangeViewBlock.jsx","Views/DefaultView.jsx","Views/AboutMe/ProfileImage.jsx","Views/AboutMe/Navigation/SectionOption.jsx","Views/AboutMe/Navigation/SectionSelector.jsx","Views/AboutMe/Content/ContentTab.jsx","Views/AboutMe/Content/ContentNav.jsx","Views/AboutMe/Content/ContentPane.jsx","Views/AboutMe/Content/TabbedContent.jsx","Views/AboutMe/Content/TabbedContentContainer.jsx","Views/AboutMe/AboutMe.jsx","Views/AboutMe/Mobile/Navigation/MobileSectionOption.jsx","Views/AboutMe/Mobile/Navigation/MobileSectionSelector.jsx","Views/AboutMe/Mobile/Content/AboutMeModalNav.jsx","Views/AboutMe/Mobile/Content/AboutMeModal.jsx","Views/AboutMe/Mobile/MobileAboutMe.jsx","Views/Skillset/Grid/SkillCard.jsx","Views/Skillset/Grid/SkillButton.jsx","Views/Skillset/Grid/SkillRow.jsx","Views/Skillset/Grid/ToggleSkillsButton.jsx","Views/Skillset/Grid/SkillGrid.jsx","Views/Skillset/SkillView.jsx","Views/Skillset/Mobile/Grid/MobileSkillModal.jsx","Views/Skillset/Mobile/Grid/MobileSkillButton.jsx","Views/Skillset/Mobile/Grid/MobileSkillRow.jsx","Views/Skillset/Mobile/Grid/MobileSkillGrid.jsx","Views/Skillset/Mobile/MobileSkillView.jsx","Views/Portfolio/Grid/GridButton.jsx","Views/Portfolio/Grid/GridRow.jsx","Views/Portfolio/Grid/ProjectCard.jsx","Views/Portfolio/Grid/ToggleProjectButton.jsx","Views/Portfolio/Grid/ProjectsGrid.jsx","Views/Portfolio/Portfolio.jsx","Views/Portfolio/Mobile/Grid/MobileGridButton.jsx","Views/Portfolio/Mobile/Grid/MobileGridRow.jsx","Views/Portfolio/Mobile/Grid/MobileProjectsGrid.jsx","Views/Portfolio/Mobile/Grid/MobileProjectModal.jsx","Views/Portfolio/Mobile/MobilePortfolio.jsx","Views/Contact/ContactContent.jsx","Views/Contact/ContactFormGroup.jsx","Views/Contact/ContactModal.jsx","Views/Contact/ContactView.jsx","Portal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","d","determineScreenSize","adjustFilter","capitalizeEveryWord","capitalize","detectOrientationChange","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","width","screenWidth","$","window","outerWidth","document","ready","console","log","filterHeight","concat","offsetHeight","css","text","undefined","textArray","split","item","join","word","strArray","toUpperCase","currentOrientationState","newOrientationState","screenHeight","innerHeight","innerWidth","ChangeViewBlock","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","setState","view","setActiveView","_this2","react_default","a","createElement","Row","className","Col","xl","size","offset","lg","md","sm","xs","Button","onClick","Component","DefaultView","buttons","items","push","ChangeViewBlock_ChangeViewBlock","Container","ProfileImage","style","backgroundSize","backgroundImage","require","SectionOption","updateActiveSection","index","option","SectionSelector","sections","keys","screenSize","buttonHeight","length","optionButtons","getButtonSize","SectionOption_SectionOption","minHeight","maxHeight","ContentTab","updateActiveChildTab","activeTab","activeChild","isActive","NavItem","NavLink","background","ContentNav","tabItems","tabs","subsections","ContentTab_ContentTab","Navbar","Nav","generateTabs","ContentPane","columnSize","hasScrollbar","content","header","body","checkForScrollbar","bind","assertThisInitialized","visibleContentHeight","getElementsByClassName","contentScrollHeight","scrollHeight","TabPane","tabId","TabbedContent","panes","generateContentPanes","contentPanes","contentKeys","ContentPane_ContentPane","TabbedContentContainer","activeSectionContent","activeSectionIndex","activeChildKeys","selectedTabIndex","ContentNav_ContentNav","TabContent","childKeys","TabbedContent_TabbedContent","AboutMe","filter","onresize","height","children","sectionIndex","getActiveSectionChildKeys","TabbedContentContainer_TabbedContentContainer","ProfileImage_ProfileImage","SectionSelector_SectionSelector","MobileSectionOption","updateActiveSectionBy","MobileSectionSelector","MobileSectionOption_MobileSectionOption","AboutMeModalNav","updateActiveSubsection","generateButtons","setActiveItem","activeSubsection","currentItem","activeItem","minWidth","maxWidth","subsection","_loop","getNavItemStyle","_this3","map","AboutMeModal","visible","closeModal","subsectionKeys","title","Modal","isOpen","toggle","close","aria-label","ModalHeader","AboutMeModalNav_AboutMeModalNav","ModalBody","MobileAboutMe","activeSection","AboutMeModal_AboutMeModal","activeSubsectionBy","MobileSectionSelector_MobileSectionSelector","modal","SkillCard","image","card","Card","CardBody","CardTitle","CardText","SkillButton","label","activeSkill","setActiveSkill","SkillRow","skills","activeSkills","generateSkillButtons","skill","calculateStyleValues","pop","determineClass","SkillButton_SkillButton","buttonWidth","margin","visibility","ToggleSkillsButton","SkillGrid","skillKeys","rows","generateSkillRows","rowLength","skillRows","startIndex","itemsPerRow","getItemsPerRow","endIndex","SkillRow_SkillRow","slice","reverse","SkillCard_SkillCard","ToggleSkillsButton_ToggleSkillsButton","SkillView","skillSet","SkillGrid_SkillGrid","MobileSkillModal","icon","id","MobileSkillButton","MobileSkillRow","generateSkillButton","MobileSkillButton_MobileSkillButton","MobileSkillGrid","MobileSkillRow_MobileSkillRow","MobileSkillView","MobileSkillModal_MobileSkillModal","MobileSkillGrid_MobileSkillGrid","GridButton","toggleActiveKey","activeKey","GridRow","getHorizontalMargin","generateProjectButtons","projectKeys","projectButtons","GridButton_GridButton","ProjectCard","generateProjectTags","tags","string","link","links","href","url","CardSubtitle","date","ToggleProjectButton","activeProject","ProjectsGrid","projectRows","GridRow_GridRow","ProjectCard_ProjectCard","ToggleProjectButton_ToggleProjectButton","Portfolio","portfolio","projects","ProjectsGrid_ProjectsGrid","MobileGridButton","nextProps","MobileGridRow","MobileGridButton_MobileGridButton","calculateMobileStyleValues","MobileProjectsGrid","MobileGridRow_MobileGridRow","MobileProjectModal","MobilePortfolio","MobileProjectModal_MobileProjectModal","MobileProjectsGrid_MobileProjectsGrid","ContactContent","toggleModal","ContactFormGroup","name","field","type","hasLabel","placeholder","FormGroup","Label","for","Input","onChange","ContactModal","formFields","firstName","lastName","email","phone","toggleContactForm","onFieldChange","e","preventDefault","newForm","target","Form","action","method","ContactFormGroup_ContactFormGroup","ContactView","ContactModal_ContactModal","ContactContent_ContactContent","Portal","activeView","DefaultView_DefaultView","MobileAboutMe_MobileAboutMe","AboutMe_AboutMe","MobileSkillView_MobileSkillView","SkillView_SkillView","MobilePortfolio_MobilePortfolio","Portfolio_Portfolio","ContactView_ContactView","helpers","App","isHome","classes","pulse","checkSize","toggleOpen","setTimeout","TransitionGroup","component","CSSTransition","classNames","timeout","Portal_Portal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e893b25e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canoe.d6267b80.png\";","import $ from 'jquery';\r\n\r\nexport function determineScreenSize(){\r\n  let screenWidth = $(window).outerWidth(true);\r\n  return getScreenSize(screenWidth);\r\n}\r\n\r\n//returns a string descriptor of the screen size.\r\nfunction getScreenSize(width){\r\n  if(width >= 1200){\r\n    return 'xlarge';\r\n  } else if (width >= 992 && width <= 1199 ){\r\n    return 'large';\r\n  } else if (width >=768 && width <= 991){\r\n    return 'medium';\r\n  } else if (width >= 576 && width <= 767){\r\n    return 'small';\r\n  } else if (width <= 575){\r\n    return 'xsmall'\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function adjustFilter(){\r\n  $(document).ready(function(){\r\n    console.log(\"adjusting\")\r\n    let filterHeight = `${$(\".about-me-view\").offsetHeight}px`;\r\n    $(\".about-me-filter\").css(\r\n      \"height\",`${filterHeight}`\r\n    )\r\n    console.log(\"adjusted\")\r\n  })\r\n}\r\n\r\nexport function capitalizeEveryWord(text){\r\n  if(text === undefined){\r\n    return \"\";\r\n  }\r\n  let textArray = text.split(\" \");\r\n  for(let item in textArray){\r\n    textArray[item] = capitalize(textArray[item])\r\n  }\r\n  return textArray.join(\" \")\r\n}\r\n\r\nexport function capitalize(word){\r\n  let strArray = word.split(\"\");\r\n  if(strArray[0] !== undefined){\r\n    strArray[0] = strArray[0].toUpperCase();\r\n  }\r\n  if(strArray[0] === undefined){\r\n    console.log(word)\r\n  }\r\n  return strArray.join(\"\");\r\n}\r\n\r\nexport function detectOrientationChange(currentOrientationState){\r\n  let screenHeight= window.innerHeight;\r\n  let screenWidth = window.innerWidth;\r\n  let newOrientationState;\r\n  screenWidth > screenHeight ? newOrientationState = \"landscape\" : newOrientationState = \"portrait\"\r\n  if(currentOrientationState !== newOrientationState){\r\n    return newOrientationState;\r\n  }\r\n  return currentOrientationState;\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Col, Row } from 'reactstrap'\r\n\r\n\r\nexport class ChangeViewBlock extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      view: this.props.view,\r\n      text: this.props.text,\r\n      setActiveView: this.props.setActiveView\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <Row className={\"main-row\"} >\r\n        <Col className={\"main-row-col\"}\r\n          xl={{ size: 8, offset: 2 }}\r\n          lg={{ size: 8, offset: 2 }}\r\n          md={{ size: 10, offset: 1 }}\r\n          sm={{ size: 10, offset: 1 }}\r\n          xs={{ size: 10, offset: 1 }}\r\n        >\r\n          <Button\r\n            onClick={() => {this.props.setActiveView(this.props.view)}}\r\n          >\r\n            <p>{this.state.text}</p>\r\n          </Button>\r\n        </Col>\r\n        <Col className={\"main-row-col-filter\"}\r\n          xl={{ size: 8, offset: 2 }}\r\n          lg={{ size: 8, offset: 2 }}\r\n          md={{ size: 10, offset: 1 }}\r\n          sm={{ size: 10, offset: 1 }}\r\n          xs={{ size: 10, offset: 1 }}\r\n        ></Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { ChangeViewBlock } from '../Components/ChangeViewBlock.jsx';\r\n\r\nexport class DefaultView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveView: this.props.setActiveView\r\n    };\r\n  }\r\n\r\n  render(){\r\n    let buttons = []\r\n    let items = [\r\n      {\r\n        \"view\": \"AboutMeView\",\r\n        \"text\": \"About Me\"\r\n      },\r\n      {\r\n        \"view\": \"SkillView\",\r\n        \"text\": \"What I Can Do\"\r\n      },\r\n      {\r\n        \"view\": \"PortfolioView\",\r\n        \"text\": \"Portfolio\"\r\n      },\r\n      {\r\n        \"view\": \"ContactView\",\r\n        \"text\": \"Contact Me\"\r\n      }\r\n    ]\r\n    for(let item in items){\r\n      buttons.push(\r\n        <ChangeViewBlock\r\n          view={items[item].view}\r\n          text={items[item].text}\r\n          setActiveView={this.props.setActiveView}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Container className=\"default-view-container\">\r\n        {buttons}\r\n      </Container >\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport class ProfileImage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      \"style\": {\r\n        \"backgroundSize\": \"cover\",\r\n        \"backgroundImage\": `url(${require(\"../../data/canoe.png\")})`\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className={\"profile-image\"} style={this.state.style}/>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button, Row } from 'reactstrap';\r\n\r\n\r\nexport class SectionOption extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSection: this.props.updateActiveSection\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      index: this.props.index,\r\n      option: this.props.option,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.style !== undefined && this.state.style !== this.props.style){\r\n      this.setState({\r\n        style: this.props.style\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"section-option\"}>\r\n        <Button onClick={() =>{this.props.updateActiveSection(this.state.index)}} style={this.state.style}>\r\n          {this.props.option}\r\n        </Button>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { SectionOption } from './SectionOption';\r\n\r\n\r\nexport class SectionSelector extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSection: this.props.updateActiveSection\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      sections: this.props.sections,\r\n      keys: Object.keys(this.props.sections),\r\n      screenSize: this.props.screenSize !== undefined ? this.props.screenSize : null\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.screenSize !== undefined && this.state.screenSize !== this.props.screenSize){\r\n      this.setState({screenSize: this.props.screenSize})\r\n    }\r\n  }\r\n\r\n  getButtonSize(){\r\n    let buttonHeight;\r\n    if(this.state.screenSize !== undefined && this.state.screenSize === \"large\"){\r\n      buttonHeight = `${(45/this.state.keys.length)-2}vh`;\r\n      console.log(`large buttonHeight - ${buttonHeight}` )\r\n    } else {\r\n      buttonHeight = `${(40/this.state.keys.length)-1}vh`;\r\n      console.log(`else buttonHeight - ${buttonHeight}` )\r\n    }\r\n    return buttonHeight\r\n  }\r\n\r\n  render(){\r\n    let optionButtons = [];\r\n    let index = 0;\r\n    if(this.state.keys){\r\n      let buttonHeight = this.getButtonSize();\r\n      for(let item in this.state.keys){\r\n        optionButtons.push(\r\n          <SectionOption\r\n            index={index}\r\n            style={{\"minHeight\": `${buttonHeight}`, \"maxHeight\": `${buttonHeight}`}}\r\n            option={this.state.keys[item]}\r\n            updateActiveSection={this.state.updateActiveSection}\r\n          />\r\n        )\r\n        index++;\r\n      }\r\n    }\r\n    return(optionButtons);\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { NavItem, NavLink} from 'reactstrap';\r\n\r\nexport class ContentTab extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveChildTab: this.props.updateActiveChildTab\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeTab: this.props.activeChild,\r\n      isActive: this.props.activeChild === this.props.index,\r\n      index: this.props.index,\r\n      text: this.props.text,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.text !== this.props.text){\r\n      this.setState({\r\n        index: this.state.index,\r\n        text: this.props.text\r\n      })\r\n    }\r\n    if(this.props.activeChild !== undefined && this.state.activeTab !== this.props.activeChild){\r\n      this.setState({\r\n        activeTab: this.props.activeChild,\r\n        isActive: this.props.activeChild === this.state.index\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <NavItem>\r\n        <NavLink\r\n          style={this.state.isActive ? {\"background\": \"linear-gradient(35deg,#475f84 5%, #364c6d 90%)\"} : null}\r\n          className={\"content-tab\"} //classnames({ active: this.state.activeTab === '1' })\r\n          onClick={() => {this.state.updateActiveChildTab(this.state.index)}}\r\n        >\r\n          {this.state.text}\r\n        </NavLink>\r\n      </NavItem>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'reactstrap';\r\nimport { ContentTab } from './ContentTab';\r\n\r\nexport class ContentNav extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveChildTab: this.props.updateActiveChildTab,\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeChild: 0,\r\n      tabItems: this.props.tabs\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeChild !== this.props.activeChild){\r\n      this.setState({\r\n        activeChild: this.props.activeChild\r\n      })\r\n    }\r\n    if(this.state.tabItems !== this.props.tabs){\r\n      this.setState({\r\n        tabItems: this.props.tabs\r\n      })\r\n    }\r\n  }\r\n\r\n  generateTabs(subsections){\r\n    let index = 0;\r\n    let tabs = [];\r\n    for(let item in subsections){\r\n      tabs.push(\r\n        <ContentTab\r\n          activeChild={this.state.activeChild}\r\n          index={index}\r\n          text={subsections[item]}\r\n          updateActiveChildTab={this.state.updateActiveChildTab}\r\n        />\r\n      )\r\n      index = index + 1;\r\n    }\r\n    return tabs;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Navbar className=\"section-tabs-container\">\r\n        <Nav tabs className={\"section-tabs\"}>\r\n          {this.state.tabItems !== undefined ? this.generateTabs(this.state.tabItems) : null}\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { TabPane, Row, Col } from 'reactstrap';\r\n\r\nexport class ContentPane extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      index: this.props.index,\r\n      columnSize: 12,\r\n      hasScrollbar: true,\r\n      content: {\r\n        \"header\": \"\",\r\n        \"body\": \"\"\r\n      },\r\n    };\r\n    this.checkForScrollbar = this.checkForScrollbar.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      content: {\r\n        \"header\": this.props.content.header,\r\n        \"body\": this.props.content.body\r\n      },\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.content.body !== this.props.content.body){\r\n      this.setState({\r\n        index: this.props.index,\r\n        content: {\r\n          \"header\": this.props.content.header,\r\n          \"body\": this.props.content.body\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  checkForScrollbar(){\r\n    let visibleContentHeight = document.getElementsByClassName('section-content-text')[0].offsetHeight;\r\n    let contentScrollHeight = document.getElementsByClassName('section-content-text')[0].scrollHeight;\r\n    if(visibleContentHeight <= contentScrollHeight && this.state.hasScrollbar === false && contentScrollHeight !== undefined){\r\n      this.setState({hasScrollbar: true})\r\n    }\r\n    if(visibleContentHeight >= contentScrollHeight && this.state.hasScrollbar === true){\r\n      this.setState({hasScrollbar: false})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <TabPane tabId={this.state.index} className={`section-content `}>\r\n        <Row>\r\n          <Col sm={this.state.columnSize}>\r\n            <h4 className=\"section-content-subheader\" >{this.state.content.header}</h4>\r\n            <p className={`section-content-text ${this.state.hasScrollbar ? \"show-scrollbar\" : \"hide-scrollbar\"}`}>{this.state.content.body}</p>\r\n          </Col>\r\n        </Row>\r\n      </TabPane>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ContentPane } from './ContentPane';\r\n\r\nexport class TabbedContent extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      \"content\": {\r\n        \"header\": \"\",\r\n        \"body\": \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      content: this.props.content,\r\n      panes: this.generateContentPanes(this.props.content)\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.content !== this.props.content){\r\n      console.log('content updating')\r\n      this.setState({\r\n        content: this.props.content,\r\n        panes: this.generateContentPanes(this.props.content)\r\n      })\r\n    }\r\n  }\r\n\r\n  generateContentPanes(content){\r\n    let contentPanes = [];\r\n    if(content){\r\n      let index = 0;\r\n      let contentKeys = Object.keys(content);\r\n      for(let item in contentKeys){\r\n        contentPanes.push(\r\n          <ContentPane\r\n            key={contentKeys[item]}\r\n            index={index}\r\n            content={content[contentKeys[item]]}\r\n            updateActiveChildTab={this.state.updateActiveChildTab}\r\n          />\r\n        )\r\n        index = index+1;\r\n      }\r\n    }\r\n    return contentPanes;\r\n  }\r\n\r\n  render(){\r\n    return(this.state.panes !== undefined ? this.state.panes : null)\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Col, TabContent } from 'reactstrap';\r\nimport { ContentNav } from './ContentNav';\r\nimport { TabbedContent } from './TabbedContent';\r\n\r\nexport class TabbedContentContainer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n    this.updateActiveChildTab = this.updateActiveChildTab.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      keys: this.props.keys,\r\n      activeSectionContent: this.props.activeSectionContent,\r\n      activeSectionIndex: this.props.activeSectionIndex,\r\n      activeChildKeys: this.props.activeChildKeys,\r\n      activeChild: this.props.activeChild,\r\n      sections: this.props.sections,\r\n      screenSize: this.props.screenSize !== undefined ? this.props.screenSize : null\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSectionIndex !== this.props.activeSectionIndex){\r\n      this.setState({\r\n        activeSectionContent: this.props.activeSectionContent,\r\n        activeSectionIndex: this.props.activeSectionIndex,\r\n        activeChild: 0\r\n      })\r\n    }\r\n    if(this.state.activeChildKeys !== this.props.activeChildKeys){\r\n      this.setState({activeChildKeys: this.props.activeChildKeys})\r\n    }\r\n    if(this.props.screenSize !== undefined && this.state.screenSize !== this.props.screenSize){\r\n      this.setState({screenSize: this.props.screenSize})\r\n    }\r\n  }\r\n\r\n  updateActiveChildTab(selectedTabIndex){\r\n    this.setState({\r\n      activeChild: selectedTabIndex\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Col\r\n        xl={{ size: 6, offset: 0 }}\r\n        lg={{ size: 6, offset: 0 }}\r\n        md={{ size: 8, offset: 0 }}\r\n        sm={{ size: 6, offset: 0 }}\r\n        xs={{ size: 6, offset: 0 }}\r\n        className={\"about-me-left-col\"}\r\n      >\r\n        <ContentNav\r\n          tabs={this.state.activeChildKeys}\r\n          updateActiveChildTab={this.updateActiveChildTab}\r\n          activeChild={this.state.activeChild}\r\n        />\r\n        <TabContent\r\n          activeTab={this.state.activeChild}\r\n          tabs={this.state.childKeys}\r\n        >\r\n          <TabbedContent\r\n            content={this.state.activeSectionContent}\r\n          />\r\n        </TabContent >\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { ProfileImage } from './ProfileImage';\r\nimport { SectionSelector } from './Navigation/SectionSelector';\r\nimport { TabbedContentContainer } from './Content/TabbedContentContainer';\r\nimport $ from 'jquery';\r\n\r\n\r\nimport sections from './aboutme.json';\r\n\r\nexport class AboutMe extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      keys: Object.keys(sections),\r\n      activeSectionContent: sections[Object.keys(sections)[0]].body,\r\n      activeChild: 0,\r\n      activeSectionIndex: 0,\r\n      sections: sections,\r\n      filter: this.adjustFilter\r\n    }\r\n    this.updateActiveSection = this.updateActiveSection.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSectionIndex: 0,\r\n      activeSectionContent: this.state.sections[this.state.keys[0]].body,\r\n      activeChildKeys: Object.keys(sections[this.state.keys[0]].body),\r\n      activeChild: this.props.activeChild,\r\n      screenSize: this.props.screenSize\r\n    });\r\n    window.onresize = this.adjustFilter;\r\n  }\r\n\r\n  adjustFilter(){\r\n    console.log(\"adjusting\")\r\n    let filterHeight = `${$(\".about-me-view\").height()}px`;\r\n    $(\".about-me-filter\").css(\r\n      \"height\",`${filterHeight}`\r\n    )\r\n    console.log(\"adjusted\")\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.screenSize !== undefined && this.state.screenSize !== this.props.screenSize){\r\n      this.setState({\r\n        screenSize: this.props.screenSize\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getActiveSectionChildKeys(sections, activeSectionIndex, keys){\r\n    let children = Object.keys(sections[keys[activeSectionIndex]].body);\r\n    let childKeys = Object.keys(children);\r\n    for(let item in childKeys){\r\n      console.log(`Child Key: ${children[childKeys[item]]}`)\r\n    }\r\n  }\r\n\r\n  updateActiveSection(sectionIndex){\r\n    this.setState({\r\n      activeChild: 0,\r\n      activeSectionIndex: sectionIndex,\r\n      activeChildKeys: Object.keys(sections[this.state.keys[sectionIndex]].body),\r\n      activeSectionContent: this.state.sections[this.state.keys[sectionIndex]].body,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    if(this.state.activeSectionIndex){\r\n      this.getActiveSectionChildKeys(this.state.sections, this.state.activeSectionIndex, this.state.keys)\r\n    }\r\n\r\n    return(\r\n      <Row className={\"about-me-view\"}>\r\n        <div className={\"about-me-filter\"} />\r\n        <TabbedContentContainer\r\n          keys={this.state.keys}\r\n          activeSectionContent={this.state.activeSectionContent}\r\n          activeSectionIndex={this.state.activeSectionIndex}\r\n          activeChildKeys={this.state.activeChildKeys}\r\n          activeChild={this.state.activeChild}\r\n          updateActiveSection={this.updateActiveSection}\r\n          sections={this.state.sections}\r\n          screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n        />\r\n        <Col\r\n          xl={{ size: 5, offset: 0 }}\r\n          lg={{ size: 5, offset: 0 }}\r\n          md={{ size: 4, offset: 0 }}\r\n          sm={{ size: 5, offset: 0 }}\r\n          xs={{ size: 5, offset: 0 }}\r\n          className={\"about-me-right-col\"}\r\n        >\r\n          {this.state.screenSize !== undefined && this.state.screenSize === \"xlarge\" || this.state.screenSize === \"large\"\r\n            ? <Row className={\"profile-image-container\"}>\r\n                <ProfileImage />\r\n              </Row>\r\n            : null\r\n          }\r\n          <Row className={\"section-options-container\"}>\r\n            <SectionSelector\r\n              screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n              sections={this.state.sections}\r\n              updateActiveSection={this.updateActiveSection}\r\n            />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button, Row } from 'reactstrap';\r\n\r\n\r\nexport class MobileSectionOption extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSectionBy: this.props.updateActiveSectionBy\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      index: this.props.index,\r\n      option: this.props.option\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"section-option\"}>\r\n        <Button onClick={() => {this.state.updateActiveSectionBy(this.state.index)}} >\r\n          {this.props.option}\r\n        </Button>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { MobileSectionOption } from './MobileSectionOption';\r\n\r\n\r\nexport class MobileSectionSelector extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSectionBy: this.props.updateActiveSectionBy\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      sections: this.props.sections,\r\n      keys: Object.keys(this.props.sections)\r\n    });\r\n  }\r\n\r\n  render(){\r\n    let optionButtons = [];\r\n    let index = 0;\r\n    if(this.state.keys){\r\n      for(let item in this.state.keys){\r\n        optionButtons.push(\r\n          <MobileSectionOption\r\n            key={index}\r\n            index={index}\r\n            option={this.state.keys[item]}\r\n            updateActiveSectionBy={this.state.updateActiveSectionBy}\r\n          />\r\n        )\r\n        index++;\r\n      }\r\n    }\r\n    return(optionButtons);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Navbar, Nav, NavItem } from 'reactstrap';\r\n\r\nexport class AboutMeModalNav extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      updateActiveSubsection: this.props.updateActiveSubsection\r\n    }\r\n    this.generateButtons = this.generateButtons.bind(this);\r\n    this.setActiveItem = this.setActiveItem.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      items: this.props.items,\r\n      activeSubsection: this.props.activeSubsection,\r\n      buttons: this.generateButtons()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.activeSubsection !== undefined && this.state.activeSubsection !== this.props.activeSubsection){\r\n      this.setState({\r\n        activeSubsection: this.props.activeSubsection,\r\n        buttons: this.generateButtons()\r\n      })\r\n    }\r\n  }\r\n\r\n  getNavItemStyle(currentItem, activeItem){\r\n    console.log(`Current Item : ${currentItem} | Active Item : ${activeItem}\\n`)\r\n    if(currentItem === activeItem){\r\n      return {\r\n        \"minWidth\": `${95/this.props.items.length}%`,\r\n        \"maxWidth\": `${95/this.props.items.length}%`,\r\n        \"width\": `${95/this.props.items.length}%`\r\n      }\r\n    } else {\r\n      return {\r\n        \"minWidth\": `${95/this.props.items.length}%`,\r\n        \"maxWidth\": `${95/this.props.items.length}%`,\r\n        \"width\": `${95/this.props.items.length}%`\r\n      }\r\n    }\r\n  }\r\n\r\n  setActiveItem(subsection){\r\n    this.setState({\r\n      activeSubsection: subsection\r\n    })\r\n  }\r\n\r\n  generateButtons(){\r\n    let buttons = [];\r\n    let style;\r\n\r\n    for(let item in this.props.items){\r\n      style = this.getNavItemStyle(this.props.items[item], this.props.activeSubsection);\r\n      buttons.push(\r\n        <NavItem\r\n          key={item}\r\n          style={style}\r\n          onClick={() => {this.state.updateActiveSubsection(this.props.items[item])}}>{this.props.items[item]}\r\n        </NavItem>\r\n      )\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Navbar className={\"about-me-section-nav\"}>\r\n        <Nav>\r\n          {this.state.items !== undefined\r\n            ? this.state.items.map((item) =>{\r\n                let style = this.getNavItemStyle(this.state.items[item], this.props.activeSubsection);\r\n                return (\r\n                        <NavItem key={item} style={style}>\r\n                          <Button onClick={() => {this.state.updateActiveSubsection(item)}} > {item} </Button>\r\n                        </NavItem>\r\n                );\r\n              })\r\n            : null\r\n          }\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport { AboutMeModalNav } from './AboutMeModalNav';\r\n\r\nexport class AboutMeModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      closeModal: this.props.closeModal\r\n    };\r\n    this.updateActiveSubsection = this.updateActiveSubsection.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSubsection: Object.keys(this.props.content)[0],\r\n      subsectionKeys: Object.keys(this.props.content),\r\n      content: this.props.content,\r\n      body: this.props.content[Object.keys(this.props.content)[0]].body,\r\n      title: this.props.title,\r\n      visible: this.props.visible\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.content !== undefined && this.state.content !== this.props.content){\r\n      this.setState({\r\n        subsectionKeys: Object.keys(this.props.content),\r\n        title: this.props.title,\r\n        body: this.props.content[Object.keys(this.props.content)[0]].body,\r\n        content: this.props.content,\r\n      })\r\n    }\r\n    if(this.props.visible !== undefined && this.state.visible !== this.props.visible){\r\n      this.setState({\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n    if(this.props.activeSubsection !== undefined && this.state.activeSubsection !== this.props.activeSubsection){\r\n      this.setState({\r\n        activeSubsection: this.props.activeSubsection\r\n      })\r\n    }\r\n  }\r\n\r\n  updateActiveSubsection(subsection){ //subsection = this.props.content key [string]\r\n    this.setState({\r\n      activeSubsection: subsection,\r\n      body: this.state.content[subsection].body\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal\r\n        className=\"about-me-modal\"\r\n        isOpen={this.state.visible}\r\n        toggle={this.state.closeModal}\r\n      >\r\n        <Button\r\n          className=\"about-me-modal-close-button\"\r\n          close aria-label=\"Cancel\"\r\n          size=\"lg\"\r\n          onClick={this.props.closeModal}\r\n        />\r\n        <ModalHeader className={\"about-me-modal header\"}>\r\n        {this.state.title ? this.state.title : null }\r\n        </ModalHeader>\r\n        {this.state.subsectionKeys\r\n          ? <AboutMeModalNav\r\n              activeSubsection={this.state.activeSubsection}\r\n              items={this.state.subsectionKeys}\r\n              updateActiveSubsection={this.updateActiveSubsection}\r\n            />\r\n          : null\r\n        }\r\n        <ModalBody >\r\n          { this.state.content\r\n            ? this.state.body\r\n            : null\r\n          }\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { MobileSectionSelector } from './Navigation/MobileSectionSelector';\r\nimport { AboutMeModal } from './Content/AboutMeModal';\r\n\r\nimport sections from '../aboutme.json';\r\n\r\nexport class MobileAboutMe extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeSectionContent: null,\r\n      activeSection: null,\r\n      keys: Object.keys(sections),\r\n      sections: sections\r\n    }\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.updateActiveSectionBy = this.updateActiveSectionBy.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.activeSectionIndex !== undefined && this.state.activeSectionIndex !== this.props.activeSectionIndex){\r\n      this.setState({\r\n        activeSectionIndex: this.props.activeSectionIndex,\r\n        activeSectionContent:  this.state.sections[this.state.keys[this.props.activeSectionIndex]].body,\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.activeSectionIndex){\r\n      this.getActiveSectionChildKeys(this.state.sections, this.state.activeSectionIndex, this.state.keys)\r\n    }\r\n\r\n    return(\r\n      <Row className={\"about-me-view\"}>\r\n        <div className={\"about-me-filter\"} />\r\n        {this.state.activeSection !== null && this.state.activeSection !== undefined\r\n          ? <AboutMeModal\r\n              activeSubsectionBy={this.state.activeSubsectionBy}\r\n              closeModal={this.closeModal}\r\n              content={this.state.activeSectionContent}\r\n              title={this.state.activeSection}\r\n              visible={this.state.activeSection !== null}\r\n            />\r\n          : null\r\n        }\r\n        <Row className={\"section-options-container\"}>\r\n          <MobileSectionSelector\r\n            sections={this.state.sections}\r\n            updateActiveSectionBy={this.updateActiveSectionBy}\r\n          />\r\n        </Row>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState({\r\n      activeSection: null\r\n    })\r\n  }\r\n\r\n  updateActiveSectionBy(index){\r\n    console.log(this.state.sections[this.state.keys[index]].body)\r\n    this.setState({\r\n      activeSectionContent: this.state.sections[this.state.keys[index]].body,\r\n      activeSection: this.state.keys[index],\r\n      modal: true\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card,  CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\n//TODO\r\n// implement skill modal functionality\r\n// implement project detail view components\r\n// style projects view\r\n// design structure of contact view\r\n// make contact form view functional\r\n\r\nexport class SkillCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      image: '',\r\n      title: '',\r\n      text: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      visible: this.props.visible\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(!this.props.visible){\r\n      this.setState({\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n    if(this.props.card !== null && this.state.title !== this.props.card.title){\r\n      this.setState({\r\n        image: this.props.card.image,\r\n        title: this.props.card.title,\r\n        text: this.props.card.text\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      this.state.visible\r\n      ? <Card className=\"skill-card\">\r\n          <CardBody>\r\n            <CardTitle>{this.state.title}</CardTitle>\r\n            <CardText>{this.state.text}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      : null\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport class SkillButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      label: this.props.label,\r\n      className: this.props.className,\r\n      activeSkill: this.props.activeSkill,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        className: this.props.className,\r\n        style: this.props.style\r\n      })\r\n    }\r\n  }\r\n\r\n  capitalize(word){\r\n    if(word === undefined){ return word}\r\n    let strArray = word.split(\" \");\r\n    let split;\r\n    for(let item in strArray){\r\n      split = strArray[item].split(\"\");\r\n      split[0] = split[0].toUpperCase();\r\n      strArray[item]= split.join(\"\")\r\n    }\r\n    return strArray.join(\" \");\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        style={this.state.style}\r\n        onClick={this.props.setActiveSkill !== null ? ()=>{this.props.setActiveSkill(this.state.label)} : null} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={this.state.className}\r\n      >\r\n        {this.capitalize(this.state.label)}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { SkillButton } from './SkillButton';\r\n\r\nexport class SkillRow extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.skills !== undefined){\r\n      this.setState({\r\n        screenSize: this.props.screenSize,\r\n        activeSkills: this.props.activeSkill,\r\n        skills: this.props.skills, //subset of SkillGrid.state.skills, contains only the skills being generated in a given row\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButtons()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.screenSize !== undefined && this.state.screenSize !== this.props.screenSize){\r\n      this.setState({\r\n        screenSize: this.props.screenSize\r\n      })\r\n    }\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        skills: this.props.skills,\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButtons()\r\n      })\r\n    }\r\n  }\r\n\r\n  determineClass(skill, activeSkill){ //conditionally appends .active or .hidden class to button\r\n    if(activeSkill !== '' && activeSkill !== undefined){\r\n      return \"grid-button hidden\"\r\n    }\r\n    return \"grid-button\"\r\n  }\r\n\r\n  generateSkillButtons(){\r\n    let buttons = [];\r\n    let skill, className;\r\n    let style = this.calculateStyleValues(this.props.skills)\r\n    while(this.props.skills.length > 0){\r\n      skill = this.props.skills.pop();\r\n      className = this.determineClass(skill, this.props.activeSkill)\r\n      buttons.push(\r\n        <SkillButton\r\n          key={skill}\r\n          style={style}\r\n          activeSkill={this.props.activeSkill} //set from props rather than state because this function is called within setState() and returns a state attribute value\r\n          className={className}\r\n          label={skill}\r\n          setActiveSkill={className === \"skill-grid-button hidden\" ? null : this.state.setActiveSkill}\r\n        />\r\n      )\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  calculateStyleValues(skills){  //Calculates the attribute values for the style object that will be passed to\r\n    let buttonWidth = `${(90/skills.length)}`; //the SkillButton components being generated\r\n    return {\r\n            \"minWidth\": `${buttonWidth}%`,\r\n            \"maxWidth\": `${buttonWidth}%`,\r\n            \"width\": `${buttonWidth}%`,\r\n            \"margin\": `1vh ${(100-(buttonWidth*skills.length))/(skills.length*2)}%`,\r\n            \"visibility\": this.props.activeSkill ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>\r\n          {this.state.buttons}\r\n        </Row>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class ToggleSkillsButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSkill: this.props.activeSkill\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        onClick={()=>{this.props.setActiveSkill(this.state.activeSkill)}} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={\"card-close-button\"}\r\n      >\r\n      {\"Close\"}\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { SkillCard } from './SkillCard';\r\nimport { SkillRow } from './SkillRow';\r\nimport { ToggleSkillsButton } from './ToggleSkillsButton';\r\n\r\nexport class SkillGrid extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill,\r\n      screenSize: \"xsmall\"\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      skills: this.props.skills,\r\n      activeSkill: this.props.activeSkill,\r\n      skillKeys: this.props.keys,\r\n      screenSize: this.props.screenSize\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.screenSize !== undefined && this.state.screenSize !== this.props.screenSize){\r\n      this.setState({\r\n        screenSize: this.props.screenSize\r\n      })\r\n    }\r\n    if(this.state.activeSkill !==  this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        card: this.props.card,\r\n        rows: this.generateSkillRows(),\r\n        screenSize: this.state.screenSize\r\n      })\r\n    }\r\n  }\r\n\r\n  getItemsPerRow(screenSize){\r\n    console.log(`getItemsPerRow: ${screenSize}`);\r\n    let rowLength;\r\n    switch(screenSize){\r\n      case \"medium\":\r\n        console.log('medium')\r\n        rowLength = 4;\r\n        break;\r\n      default:\r\n        rowLength = 5;\r\n        break;\r\n    }\r\n    return rowLength;\r\n  }\r\n\r\n  generateSkillRows(){                    //- pushes each skill object in props to an array, will be\r\n    let skills = [];                      // iterated through when pushing objects to SkillRow components\r\n    let skillRows = [];                   // stores the generated SkillRow components, will be returned\r\n    let startIndex = 0;\r\n    let itemsPerRow = this.props.screenSize !== undefined ? this.getItemsPerRow(this.props.screenSize) : 4;\r\n    let endIndex =  itemsPerRow // ending index of objects being passed to SkillRow component\r\n    for(let skill in this.props.keys){\r\n      skills.push(this.props.keys[skill])\r\n    }\r\n    if(this.props.keys.length <= 4){               // If there are not enough objects to fill a full row,\r\n      skillRows.push(                              // we insert what objects are there and return them.\r\n        <SkillRow\r\n          activeSkill={this.state.activeSkill}\r\n          className={\"skill-grid-row\"}\r\n          skills={skills.slice(startIndex, skills.length)}\r\n          key={`${startIndex}_${endIndex}`}\r\n          setActiveSkill={this.state.setActiveSkill}\r\n        />\r\n      )\r\n      return skillRows\r\n    } else { // otherwise we push the initial row\r\n      skillRows.push(\r\n        <SkillRow\r\n          activeSkill={this.state.activeSkill}\r\n          className={\"skill-grid-row\"}\r\n          skills={skills.slice(startIndex, endIndex)}\r\n          key={`${startIndex}_${endIndex}`}\r\n          setActiveSkill={this.state.setActiveSkill}\r\n        />\r\n      )\r\n    }\r\n    while(endIndex < skills.length && skills !== undefined){       // After the first row is inserted,\r\n      startIndex = endIndex;                                       // we iterate through the remaining objects\r\n      endIndex+itemsPerRow > skills.length                                   // and make sure the end index !> skills.length\r\n        ? endIndex = skills.length                                     // if it is, we make the end index === skills.length\r\n        : endIndex = endIndex+itemsPerRow                                      // (which will be the number of items to a row)\r\n      skillRows.push(\r\n        <SkillRow\r\n          screenSize={this.state.screenSize}\r\n          activeSkill={this.state.activeSkill}\r\n          className={\"skill-grid-row\"}\r\n          skills={skills.slice(startIndex, endIndex)}         //pushing generated component to skillRows.array\r\n          key={`${startIndex}_${endIndex}`}\r\n          setActiveSkill={this.state.setActiveSkill}\r\n        />\r\n      )\r\n    }\r\n    return skillRows.reverse();\r\n  }\r\n\r\n  render(){\r\n    if(this.state.skillRows){\r\n      return (this.state.skillRows)\r\n    }\r\n    return(\r\n      <Col\r\n        className={\"skill-grid\"}\r\n        xl={{ size: 8, offset: 2 }}\r\n        lg={{ size: 10, offset: 1 }}\r\n        md={{ size: 12, offset: 0 }}\r\n        sm={{ size: 10, offset: 1 }}\r\n        xs={{ size: 10, offset: 1 }}\r\n      >\r\n        <div className={\"grid-filter\"}></div>\r\n        {this.state.card !== null\r\n          ? <SkillCard\r\n              visible={this.state.card !== null}\r\n              card={this.state.card ? this.state.card : null}\r\n            />\r\n          : null\r\n        }\r\n        {this.state.rows}\r\n        {this.state.activeSkill !== \"\"\r\n          ? <ToggleSkillsButton\r\n                activeSkill={this.state.activeSkill}\r\n                className={\"card-close-button\"}\r\n                setActiveSkill={this.state.setActiveSkill}\r\n              />\r\n          : null\r\n        }\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport {SkillGrid} from './Grid/SkillGrid';\r\n\r\n\r\nimport skills from './skillset.json';\r\n\r\n//TODO style rows\r\n\r\nexport class SkillView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      skillSet: skills,\r\n      card: null,\r\n      skillKeys: Object.keys(skills)\r\n    };\r\n    this.setActiveSkill = this.setActiveSkill.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSkill: '',\r\n      modal: false,\r\n      screenSize: this.props.screenSize\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.screenSize !== undefined && this.state.screenSize !== this.props.screenSize){\r\n      this.setState({\r\n        screenSize: this.props.screenSize\r\n      })\r\n    }\r\n  }\r\n\r\n  setActiveSkill(skill){\r\n    if(this.state.activeSkill === skill){\r\n      this.setState({\r\n        activeSkill: '',\r\n        card: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        activeSkill: skill,\r\n        card: {\r\n          image: \"\", //this.state.skillSet[skill].content.icon\r\n          title: this.state.skillSet[skill].content.header,\r\n          text: this.state.skillSet[skill].content.text\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"skillset-view-container\"}>\r\n        <SkillGrid\r\n          screenSize={this.state.screenSize}\r\n          skills={this.state.skillSet}\r\n          keys={this.state.skillKeys}\r\n          activeSkill={this.state.activeSkill}\r\n          setActiveSkill={this.setActiveSkill}\r\n          card={this.state.card !== null ? this.state.card : null}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\n\r\nexport class MobileSkillModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      card: {\r\n          \"icon\": \"modal icon\",\r\n          \"title\": \"modal title\",\r\n          \"text\": \"modal text\"\r\n      },\r\n      visible: false,\r\n      closeModal: this.props.closeModal\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.card !== null && this.props.card !== undefined){\r\n      this.setState({\r\n        card: {\r\n          \"icon\": this.props.card.icon,\r\n          \"title\": this.props.card.title,\r\n          \"text\": this.props.card.text\r\n        },\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.card === null){\r\n      this.setState({\r\n        visible: this.props.visible,\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal isOpen={this.state.visible}  className=\"skill-modal\" id=\"skillModal\">\r\n        <Button\r\n          className=\"skills-modal-close-button\"\r\n          close aria-label=\"Cancel\"\r\n          size=\"lg\"\r\n          onClick={this.state.closeModal}\r\n        />\r\n        <ModalHeader className=\"skill-modal-header\">{this.state.card.title}</ModalHeader>\r\n          <ModalBody >\r\n            <div className=\"skill-icon\">{this.state.card.icon}</div>\r\n            <div className=\"skill-text\">{this.state.card.text}</div>\r\n          </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport class MobileSkillButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      label: this.props.label,\r\n      className: this.props.className,\r\n      activeSkill: this.props.activeSkill,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        className: this.props.className,\r\n        style: this.props.style\r\n      })\r\n    }\r\n  }\r\n\r\n  capitalize(word){\r\n    if(word === undefined){ return word}\r\n    let strArray = word.split(\" \");\r\n    let split;\r\n    for(let item in strArray){\r\n      split = strArray[item].split(\"\");\r\n      split[0] = split[0].toUpperCase();\r\n      strArray[item]= split.join(\"\")\r\n    }\r\n    return strArray.join(\" \");\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        style={this.state.style}\r\n        onClick={this.props.setActiveSkill !== null ? ()=>{this.props.setActiveSkill(this.state.label)} : null} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={this.state.className}\r\n      >\r\n        {this.capitalize(this.state.label)}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { MobileSkillButton } from './MobileSkillButton';\r\n\r\nexport class MobileSkillRow extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.skills !== undefined){\r\n      this.setState({\r\n        activeSkills: this.props.activeSkill,\r\n        skills: this.props.skills, //subset of SkillGrid.state.skills, contains only the skills being generated in a given row\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButton()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !== this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        skills: this.props.skills,\r\n        className: this.props.className,\r\n        buttons: this.generateSkillButton()\r\n      })\r\n    }\r\n  }\r\n\r\n  determineClass(skill, activeSkill){ //conditionally appends .active or .hidden class to button\r\n    if(activeSkill !== '' && activeSkill !== undefined){\r\n      return \"grid-button hidden\"\r\n    }\r\n    return \"grid-button\"\r\n  }\r\n\r\n  generateSkillButton(){\r\n    let style = this.calculateStyleValues(this.props.skills)\r\n    let skill = this.props.skills;\r\n    let className = this.determineClass(skill, this.props.activeSkill)\r\n\r\n    return  <MobileSkillButton\r\n              style={style}\r\n              activeSkill={this.props.activeSkill} //set from props rather than state because this function is called within setState() and returns a state attribute value\r\n              className={className}\r\n              label={skill}\r\n              setActiveSkill={className === \"skill-grid-button hidden\" ? null : this.state.setActiveSkill}\r\n            />\r\n  }\r\n\r\n  calculateStyleValues(skills){  //Calculates the attribute values for the style object that will be passed to\r\n    return {\r\n            \"minWidth\": `95vw`,\r\n            \"maxWidth\": `95vw`,\r\n            \"width\": `95vw`,\r\n            \"margin\": `1vh 2.5vw`,\r\n            \"visibility\": this.props.activeSkill ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>\r\n          {this.state.buttons}\r\n        </Row>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { MobileSkillRow } from './MobileSkillRow';\r\n\r\nexport class MobileSkillGrid extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setActiveSkill: this.props.setActiveSkill\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      skills: this.props.skills,\r\n      activeSkill: this.props.activeSkill,\r\n      skillKeys: this.props.keys,\r\n      rows: this.generateSkillRows()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeSkill !==  this.props.activeSkill && this.props.activeSkill !== undefined){\r\n      this.setState({\r\n        activeSkill: this.props.activeSkill,\r\n        card: this.props.card,\r\n        rows: this.generateSkillRows()\r\n      })\r\n    }\r\n  }\r\n\r\n  generateSkillRows(){                    // pushes each skill object in props to an array, will be\r\n    let skills = [];                      // iterated through when pushing objects to SkillRow components\r\n    let skillRows = [];                   // stores the generated SkillRow components, will be returned\r\n    for(let skill in this.props.keys){\r\n      skills.push(this.props.keys[skill])\r\n    }\r\n    for(let skill in skills){\r\n        skillRows.push(\r\n          <MobileSkillRow\r\n            activeSkill={this.props.activeSkill}\r\n            className={\"skill-grid-row\"}\r\n            skills={skills[skill]}\r\n            key={`${skill}`}\r\n            setActiveSkill={this.state.setActiveSkill}\r\n          />\r\n        )\r\n      }\r\n    return skillRows.reverse();\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.skillRows){\r\n      return (this.state.skillRows)\r\n    }\r\n    return(\r\n      <Col\r\n        className={\"skill-grid\"}\r\n        xl={{ size: 10, offset: 1 }}\r\n        lg={{ size: 10, offset: 1 }}\r\n        md={{ size: 10, offset: 1 }}\r\n        sm={{ size: 12, offset: 0 }}\r\n        xs={{ size: 12, offset: 0 }}\r\n      >\r\n        {this.state.rows !== undefined\r\n          ? <div className={\"grid-filter\"} style={{\"minHeight\": `${this.state.rows.length*11}vh`}}></div>\r\n          : null\r\n        }\r\n        {this.state.rows !== undefined\r\n          ? this.state.rows\r\n          : null\r\n        }\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { MobileSkillModal } from './Grid/MobileSkillModal';\r\nimport { MobileSkillGrid } from './Grid/MobileSkillGrid';\r\n\r\n\r\nimport skills from '../skillset.json';\r\n\r\n//TODO style rows\r\n\r\nexport class MobileSkillView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      skillSet: skills,\r\n      card: null,\r\n      skillKeys: Object.keys(skills)\r\n    };\r\n    this.setActiveSkill = this.setActiveSkill.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeSkill: '',\r\n      modal: false\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  setActiveSkill(skill){\r\n    if(this.state.activeSkill === skill){\r\n      this.setState({\r\n        activeSkill: '',\r\n        card: null\r\n      })\r\n    } else {\r\n      this.setState({\r\n        activeSkill: skill,\r\n        card: {\r\n          icon: this.state.skillSet[skill].content.icon,\r\n          title: this.state.skillSet[skill].content.header,\r\n          text: this.state.skillSet[skill].content.text\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState({\r\n      activeSkill: null,\r\n      card: null\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"skillset-view-container\"}>\r\n      <header className=\"skills-header\">Skills</header>\r\n        {this.state.card !== undefined && this.state.card !== null\r\n          ? <MobileSkillModal\r\n              visible={this.state.card !== null && this.state.card !== undefined}\r\n              card={this.state.card !== null && this.state.card !== undefined ? this.state.card : null}\r\n              closeModal={this.closeModal}\r\n            />\r\n          : null\r\n        }\r\n        <MobileSkillGrid\r\n          skills={this.state.skillSet}\r\n          keys={this.state.skillKeys}\r\n          activeSkill={this.state.activeSkill}\r\n          setActiveSkill={this.setActiveSkill}\r\n          card={this.state.card !== null ? this.state.card : null}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class GridButton extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      item: this.props.item,\r\n      index: this.props.index,\r\n      activeKey: this.props.activeKey,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({\r\n        style: this.props.style,\r\n        activeKey: this.props.activeKey,\r\n        className: this.props.className,\r\n        item: this.props.item\r\n      })\r\n    }\r\n  }\r\n\r\n  capitalize(word){\r\n    let strArray = word.split(\" \");\r\n    let split;\r\n    if(strArray[0] === undefined){ return word}\r\n    for(let item in strArray){\r\n      split = strArray[item].split(\"\");\r\n      split[0] = split[0].toUpperCase();\r\n      strArray[item]= split.join(\"\")\r\n    }\r\n    return strArray.join(\" \");\r\n  }\r\n\r\n  render(){\r\n    if(this.state.item){\r\n      return(\r\n        <Button\r\n          className={this.state.className}\r\n          onClick={()=>{this.props.toggleActiveKey(this.state.item)}}\r\n          style={this.state.style}\r\n        >\r\n          <div className={\"project-button-filter\"}/>\r\n          {this.capitalize(this.state.item)}\r\n        </Button>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { GridButton } from './GridButton';\r\n\r\nexport class GridRow extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n    this.getHorizontalMargin = this.getHorizontalMargin.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      buttons: this.generateProjectButtons()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({activeKey: this.props.activeKey, buttons: this.generateProjectButtons()})\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){ //generates the buttons that will be contained in GridRow.state.buttons array\r\n    let projectKeys = Object.keys(this.props.items);\r\n    let projectButtons = [];\r\n    let index = 0;\r\n    let item;\r\n    while(projectKeys.length >= projectButtons.length){\r\n      item = this.props.items[projectKeys[index]];\r\n      projectButtons.push(\r\n        <GridButton\r\n          style={this.calculateStyleValues(projectKeys)}\r\n          className={\"grid-button\"}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n          key={index}\r\n          item={item}\r\n          index={index}\r\n          activeKey={this.props.activeKey ? this.props.activeKey : null}\r\n        />\r\n      )\r\n      index = index +1;\r\n    }\r\n    return projectButtons\r\n  }\r\n\r\n  calculateStyleValues(projectKeys){  //Calculates the attribute values for the style object that will be passed to\r\n    let buttonWidth = `${(92/projectKeys.length)}`; //the GridButton components being generated\r\n    let horizontalMargin = this.getHorizontalMargin(buttonWidth, projectKeys);\r\n    return {\r\n            \"minWidth\": `${buttonWidth}%`,\r\n            \"maxWidth\": `${buttonWidth}%`,\r\n            \"width\": `${buttonWidth}%`,\r\n            \"margin\": `2vh auto .75vh`,\r\n            \"minHeight\": `${((10*(3/projectKeys.length))/(3.85-projectKeys.length))}vh`, //calculated using a base of 8vh, multiply by 3/(#items) in row, then divide by 3.75-(#items in row)\r\n            \"maxHeight\": `${((10*(3/projectKeys.length))/(3.85-projectKeys.length))}vh`,\r\n            \"visibility\": this.props.activeKey !== null && this.props.activeKey !== undefined ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  getHorizontalMargin(buttonWidth, projectKeys){\r\n    let a, b;\r\n    a = 95-buttonWidth*projectKeys.length;\r\n    b = projectKeys.length*2;\r\n    return a/b;\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>{this.state.buttons}</Row>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, CardText, CardBody, CardSubtitle, CardTitle } from 'reactstrap';\r\n\r\nexport class ProjectCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false\r\n    };\r\n    this.generateProjectTags = this.generateProjectTags.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      visible: this.props.visible,\r\n      card: this.props.card,\r\n      tags: this.generateProjectTags()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.card !== this.props.card){\r\n      this.setState({\r\n        visible: this.props.visible,\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  generateProjectLinkButtons(){\r\n\r\n  }\r\n\r\n  generateProjectTags(){\r\n    let string = \"\";\r\n    console.log(this.props.card.tags)\r\n    for(let item in this.props.card.tags){\r\n      string = string + ` | ${this.props.card.tags[item]}`\r\n    }\r\n    string = string + \" |\"\r\n    return string\r\n  }\r\n\r\n  linkButton(link){\r\n    return(\r\n      <button className=\"project-link-button\">{link.id}</button>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      this.state.visible\r\n      ? <Card className=\"project-card\">\r\n          <CardBody>\r\n            <CardText>\r\n              <div className=\"project-card-left-column\">\r\n                <div className=\"project-links-container\">\r\n                  {this.state.card.links.map((item) =>{\r\n                      return <button className=\"project-link-button\">\r\n                        <a href={`${item.url}`}>{item.id}</a>\r\n                      </button>\r\n                    })\r\n                  }\r\n                </div>\r\n                <ul className=\"project-tag-container\">\r\n                  {this.state.card.tags.map((item)=>{ return <li className=\"project-tags\">{item}</li>})}\r\n                </ul>\r\n              </div>\r\n              <div className=\"project-card-right-column\">\r\n                <CardTitle className=\"project-title\">{this.state.card.title}</CardTitle>\r\n                <CardSubtitle className=\"project-date\">{this.state.card.date}</CardSubtitle>\r\n                <p className=\"project-description\">{this.state.card.text}</p>\r\n              </div>\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      : null\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class ToggleProjectButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeProject: this.props.activeProject,\r\n      className: this.props.className\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey){\r\n      this.setState({\r\n        activeKey: this.props.activeKey\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button\r\n        onClick={()=>{this.props.toggleActiveKey(this.state.activeKey)}} //this.props.setActiveSkill will be null if it is .hidden\r\n        className={this.state.className}\r\n      >\r\n        {\"Close\"}\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { GridRow } from './GridRow';\r\nimport { ProjectCard } from './ProjectCard';\r\nimport { ToggleProjectButton } from './ToggleProjectButton';\r\n\r\nexport class ProjectsGrid extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      items: this.props.items,\r\n      rows: this.generateProjectButtons(),\r\n      card: this.props.card,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey){\r\n      this.setState({\r\n        activeKey: this.props.activeKey,\r\n        rows: this.generateProjectButtons()\r\n      })\r\n    }\r\n    if(this.state.card !== this.props.card){\r\n      this.setState({\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){\r\n    let items = this.props.items;\r\n    let projectRows = [];\r\n    let startIndex = 0;\r\n    let endIndex = 3;\r\n    projectRows.push(\r\n      <GridRow\r\n        activeKey={this.props.activeKey}\r\n        className={\"projects-row\"}\r\n        items={items.slice(startIndex, endIndex)}\r\n        key={`${startIndex}_${endIndex}`}\r\n        toggleActiveKey={this.state.toggleActiveKey}\r\n      />\r\n    )\r\n    while(endIndex < items.length && items !== undefined){\r\n      startIndex = endIndex;\r\n      (endIndex+3) > items.length\r\n        ? endIndex = startIndex + (items.length-startIndex)\r\n        : endIndex = endIndex+3\r\n      projectRows.push(\r\n        <GridRow\r\n          activeKey={this.props.activeKey}\r\n          className={\"projects-row\"}\r\n          items={items.slice(startIndex, endIndex)}\r\n          key={`${startIndex}_${endIndex}`}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n        />\r\n      )\r\n    }\r\n    return projectRows.reverse(); //reversed so that incomplete row will be on top, if projects.length % (numberOfItemsInRow) !== 0\r\n  }\r\n\r\n  render(){\r\n    if(this.state.rows){\r\n      return(\r\n        <Col\r\n          xl={{ size: 8, offset: 2 }}\r\n          lg={{ size: 10, offset: 1 }}\r\n          md={{ size: 12, offset: 0 }}\r\n          sm={{ size: 10, offset: 1 }}\r\n          xs={{ size: 10, offset: 1 }}\r\n          className={\"projects-grid\"}\r\n        >\r\n          <div className={\"grid-filter\"}></div>\r\n          {this.state.card !== null\r\n            ? <ProjectCard\r\n                visible={this.state.card !== null}\r\n                card={this.state.card ? this.state.card : null}\r\n              />\r\n            : null\r\n          }\r\n          {this.state.rows}\r\n          {this.state.activeKey !== null && this.state.activeKey !== undefined\r\n            ? <ToggleProjectButton\r\n                activeKey={this.state.activeKey}\r\n                className={\"card-close-button\"}\r\n                toggleActiveKey={this.state.toggleActiveKey}\r\n              />\r\n            : null\r\n          }\r\n        </Col>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport portfolio from './portfolio.json';\r\n\r\nimport { ProjectsGrid } from './Grid/ProjectsGrid';\r\n\r\nexport class Portfolio extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      projectKeys: Object.keys(portfolio),\r\n      card: null,\r\n      projects: portfolio\r\n    };\r\n    this.toggleActiveKey = this.toggleActiveKey.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeKey: null\r\n    })\r\n  }\r\n\r\n  toggleActiveKey(key){\r\n    if(this.state.activeKey === key){                //if the key value passed from the button is equal to\r\n      this.setState({ activeKey: null, card: null }) // Portfolio.state.activeKey, resets activeKey and state.card to null\r\n    } else {\r\n      this.setState({   //if Portfolio.state.activeKey === null, sets Portfolio.state.activeKey and sets Portfolio.state.card object values from the values\r\n        activeKey: key, //found in Portfolio.state.projects\r\n        card: {\r\n          tags: this.state.projects[key].tags,\r\n          title: this.state.projects[key].content.header,\r\n          text: this.state.projects[key].content.text,\r\n          date: this.state.projects[key].date,\r\n          links: this.state.projects[key].links\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row>\r\n        <ProjectsGrid\r\n          className={\"projects-grid\"}\r\n          items={this.state.projectKeys}\r\n          activeKey={this.state.activeKey}\r\n          card={this.state.card !== null ? this.state.card : null}\r\n          toggleActiveKey={this.toggleActiveKey}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class MobileGridButton extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      item: this.props.item,\r\n      index: this.props.index,\r\n      activeKey: this.props.activeKey,\r\n      style: this.props.style\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n      if(nextProps.style !== this.state.style){\r\n          this.setState({style: nextProps.style});\r\n      }\r\n    }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({\r\n        activeKey: this.props.activeKey,\r\n        className: this.props.className,\r\n        item: this.props.item\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.item){\r\n      return(\r\n        <Button\r\n          className={this.state.className}\r\n          onClick={()=>{this.props.toggleActiveKey(this.state.item)}}\r\n          style={this.state.style}\r\n        >\r\n          <div className={\"project-button-filter\"}/>\r\n          {this.state.item}\r\n        </Button>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport { MobileGridButton } from './MobileGridButton';\r\n\r\nexport class MobileGridRow extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      item: this.props.item,\r\n      buttons: this.generateProjectButtons()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey ){\r\n      this.setState({activeKey: this.props.activeKey, buttons: this.generateProjectButtons()})\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){ //generates the buttons that will be contained in GridRow.state.buttons array\r\n    let projectKeys = Object.keys(this.props.item);\r\n    let projectButtons = [];\r\n    let index = 0;\r\n    let item;\r\n      item = this.props.item;\r\n      projectButtons.push(\r\n        <MobileGridButton\r\n          style={this.calculateMobileStyleValues(projectKeys)}\r\n          className={\"mobile-grid-button\"}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n          key={index}\r\n          item={item}\r\n          index={index}\r\n          activeKey={this.props.activeKey ? this.props.activeKey : null}\r\n        />\r\n      )\r\n      index = index +1;\r\n    return projectButtons\r\n  }\r\n\r\n  calculateMobileStyleValues(projectKeys){  //Calculates the attribute values for the style object that will be passed to\r\n    return {\r\n            \"minWidth\": `95%`,\r\n            \"maxWidth\": `95%`,\r\n            \"width\": `95%`,\r\n            \"margin\": `.5vh 2.5%`,\r\n            \"minHeight\": `10vh`,\r\n            \"maxHeight\": `fit-content`,\r\n            \"visibility\": this.props.activeKey !== null && this.props.activeKey !== undefined ? \"hidden\" : \"visible\"\r\n          }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.buttons){\r\n      return(\r\n        <Row className={this.state.className}>{this.state.buttons}</Row>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport { MobileGridRow } from './MobileGridRow';\r\n\r\nexport class MobileProjectsGrid extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleActiveKey: this.props.toggleActiveKey\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      className: this.props.className,\r\n      activeKey: this.props.activeKey,\r\n      items: this.props.items,\r\n      rows: this.generateProjectButtons(),\r\n      card: this.props.card,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeKey !== this.props.activeKey){\r\n      this.setState({\r\n        activeKey: this.props.activeKey,\r\n        rows: this.generateProjectButtons()\r\n      })\r\n    }\r\n    if(this.state.card !== this.props.card){\r\n      this.setState({\r\n        card: this.props.card\r\n      })\r\n    }\r\n  }\r\n\r\n  generateProjectButtons(){\r\n    let items = this.props.items;\r\n    let projectRows = [];\r\n    for(let item in items){\r\n      projectRows.push(\r\n        <MobileGridRow\r\n          activeKey={this.props.activeKey}\r\n          className={\"projects-row\"}\r\n          item={items[item]}\r\n          key={`${item}`}\r\n          toggleActiveKey={this.state.toggleActiveKey}\r\n        />\r\n      )\r\n    }\r\n    return projectRows.reverse(); //reversed so that incomplete row will be on top, if projects.length % (numberOfItemsInRow) !== 0\r\n  }\r\n\r\n  render(){\r\n    if(this.state.rows){\r\n      return(\r\n        <Col\r\n          xl={{ size: 12, offset: 0 }}\r\n          lg={{ size: 12, offset: 0 }}\r\n          md={{ size: 10, offset: 1 }}\r\n          sm={{ size: 12, offset: 0 }}\r\n          xs={{ size: 12, offset: 0 }}\r\n          className={\"projects-grid\"}\r\n        >\r\n          <div className={\"grid-filter\"} style={{\"minHeight\": `${this.state.rows.length*16}vh`}}></div>\r\n          {this.state.rows}\r\n        </Col>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\n\r\nexport class MobileProjectModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeKey: this.props.activeKey,\r\n      card: null,\r\n      closeModal: this.props.closeModal,\r\n      visible: this.props.visible\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeKey: this.props.activeKey,\r\n      visible: this.props.visible,\r\n      card: null,\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.visible !== this.props.visible){\r\n      this.setState({\r\n        visible: this.props.visible\r\n      })\r\n    }\r\n    if(this.props.card !== undefined && this.state.title !== this.props.card.title){\r\n      this.setState({\r\n        activeKey:  this.props.activeKey,\r\n        tags: this.props.card.tags[0],\r\n        title: this.props.card.title,\r\n        text: this.props.card.text,\r\n        date: this.props.card.date,\r\n        links: this.props.card.links\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal isOpen={this.state.visible}  className=\"project-modal\" id=\"projectModal\">\r\n      <Button\r\n        className=\"project-modal-close-button\"\r\n        close aria-label=\"Cancel\"\r\n        size=\"lg\"\r\n        onClick={this.state.closeModal}\r\n      />\r\n        <ModalHeader className=\"project-modal-header\">\r\n          {this.state.title}\r\n          <p className=\"project-date\">{this.state.date}</p>\r\n        </ModalHeader>\r\n          <ModalBody >\r\n            <p className=\"project-text\">{this.state.text}</p>\r\n            { this.state.links !== undefined\r\n              ? this.state.links.map((item) =>{\r\n                  return <button className=\"project-link-button\">\r\n                          <a href={`${item.url}`}>{item.id}</a>\r\n                         </button>\r\n                  })\r\n              : null\r\n            }\r\n          </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport portfolio from '../portfolio.json';\r\n\r\nimport { MobileProjectsGrid } from './Grid/MobileProjectsGrid';\r\nimport { MobileProjectModal } from './Grid/MobileProjectModal';\r\n\r\nexport class MobilePortfolio extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      projectKeys: Object.keys(portfolio),\r\n      card: null,\r\n      projects: portfolio\r\n    };\r\n    this.toggleActiveKey = this.toggleActiveKey.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      activeKey: null\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.card === null){\r\n      this.setState({\r\n        card: null\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleActiveKey(key){\r\n    if(this.state.activeKey === key){                //if the key value passed from the button is equal to\r\n      this.setState({ activeKey: null, card: null }) // Portfolio.state.activeKey, resets activeKey and state.card to null\r\n    } else {\r\n      this.setState({   //if Portfolio.state.activeKey === null, sets Portfolio.state.activeKey and sets Portfolio.state.card object values from the values\r\n        activeKey: key, //found in Portfolio.state.projects\r\n        card: {\r\n          date: this.state.projects[key].date,\r\n          links: this.state.projects[key].links,\r\n          tags: this.state.projects[key].tags,\r\n          title: this.state.projects[key].content.header,\r\n          text: this.state.projects[key].content.text\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  closeModal(){\r\n    this.setState({\r\n      activeKey: null,\r\n      card: null\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row>\r\n        {this.state.card !== undefined && this.state.card !== null\r\n          ? <MobileProjectModal\r\n              visible={this.state.card !== null && this.state.card !== undefined}\r\n              card={this.state.card !== null && this.state.card !== undefined ? this.state.card : null}\r\n              closeModal={this.closeModal}\r\n            />\r\n          : null\r\n        }\r\n        <header className=\"portfolio-header\">Portfolio</header>\r\n        <MobileProjectsGrid\r\n          className={\"projects-grid\"}\r\n          items={this.state.projectKeys}\r\n          activeKey={this.state.activeKey}\r\n          card={null}\r\n          toggleActiveKey={this.toggleActiveKey}\r\n        />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Row } from 'reactstrap';\r\n\r\nexport class ContactContent extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      toggleModal: this.props.toggleModal\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Col\r\n        xl={{ size: 8, offset: 2 }}\r\n        lg={{ size: 10, offset: 1 }}\r\n        md={{ size: 10, offset: 1 }}\r\n        sm={{ size: 10, offset: 1 }}\r\n        xs={{ size: 10, offset: 1 }}\r\n        className={\"container\"}\r\n      >\r\n        <Row className={\"header\"}>\r\n          <p>Get In Touch</p>\r\n        </Row>\r\n\r\n        <Row className={\"content\"}>\r\n          <Col\r\n            xl={{ size: 6, offset: 1 }}\r\n            lg={{ size: 6, offset: 1 }}\r\n            md={{ size: 6, offset: 1 }}\r\n            sm={{ size: 6, offset: 1 }}\r\n            xs={{ size: 10, offset: 1 }}\r\n            className={\"left\"}\r\n          >\r\n            <p>Email - taymosier@gmail.com</p>\r\n            <p>GitHub -  github.com/taymosier</p>\r\n            <p>LinkedIn - www.linkedin.com/in/taylormosier</p>\r\n            <p>Raleigh-Durham, NC</p>\r\n          </Col>\r\n          <Col\r\n            xl={{ size: 4, offset: 1 }}\r\n            lg={{ size: 4, offset: 1 }}\r\n            md={{ size: 4, offset: 1 }}\r\n            sm={{ size: 4, offset: 1 }}\r\n            xs={{ size: 10, offset: 1 }}\r\n            className={\"right\"}\r\n          >\r\n            <p className=\"blob\">\r\n              Have an idea for an app or want to discuss a full-time, part-time, or freelance opportunity?\r\n            </p>\r\n            <Button\r\n              onClick={this.state.toggleModal}\r\n              className=\"contact-modal-button\"\r\n            >\r\n              Contact Me\r\n            </Button>\r\n          </Col >\r\n        </Row>\r\n      </Col>\r\n    );\r\n}}\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nexport class ContactFormGroup extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      name: this.props.field.name,\r\n      value: this.props.field.value,\r\n      type: this.props.field.type,\r\n      hasLabel: this.props.field.hasLabel,\r\n      label: this.props.field.label,\r\n      placeholder: this.props.field.placeholder !== undefined ? this.props.field.placeholder : null\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <FormGroup>\r\n        {this.state.hasLabel !== undefined && this.state.hasLabel\r\n          ? <Label for={this.state.name}>{this.state.label}</Label>\r\n          : null\r\n        }\r\n        <Input\r\n          name={this.state.name}\r\n          value={this.state.value}\r\n          type={this.state.type}\r\n          onChange={this.props.onChange}\r\n          placeholder={this.state.placeholder !== null ? this.state.placeholder : null}\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Form, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\nimport { ContactFormGroup } from './ContactFormGroup';\r\n\r\nexport class ContactModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: this.props.visible,\r\n      toggle: this.props.toggleModal,\r\n      formFields: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        toggleContactForm: this.props.toggleContactForm\r\n      }\r\n    }\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.isOpen !== this.props.visible){\r\n      this.setState({\r\n        isOpen: this.props.visible\r\n      })\r\n    }\r\n  }\r\n\r\n  onFieldChange(e){\r\n    e.preventDefault();\r\n    let newForm = this.state.formFields;\r\n    newForm[`${e.target.name}`] = e.target.value\r\n    console.log(e.target.name);\r\n    this.setState({\r\n      formFields: newForm\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <Modal isOpen={this.state.isOpen} toggle={this.state.toggleContactForm} className=\"contact-form\" id=\"contactForm\">\r\n          <div className={\"contact-form-filter\"} />\r\n          <Button className=\"contact-form-close-button\" onClick={this.state.toggle} close aria-label=\"Cancel\" size=\"lg\"/>\r\n          <ModalHeader toggle={this.state.toggleContactForm} className=\"contact-form-header\">Start The Conversation!</ModalHeader>\r\n          <ModalBody >\r\n            <Form className=\"contact-form-fields-container\" action=\"https://formspree.io/taymosier@gmail.com\" method=\"POST\">\r\n              <Col\r\n              className=\"contact-form-col\"\r\n                xl={{ size: 10, offset: 1 }}\r\n                lg={{ size: 10, offset: 1 }}\r\n                md={{ size: 12, offset: 0 }}\r\n                sm={{ size: 12, offset: 0 }}\r\n                xs={{ size: 12, offset: 0 }}\r\n              >\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"firstName\",\r\n                      type: \"text\",\r\n                      hasLabel: false,\r\n                      label: \"\",\r\n                      placeholder: \"First Name\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"lastName\",\r\n                      type: \"text\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Last Name\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"email\",\r\n                      type: \"email\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Email\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"phone\",\r\n                      type: \"number\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Phone Number\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n                <ContactFormGroup\r\n                  onChange={this.onFieldChange}\r\n                  field={\r\n                    {\r\n                      name: \"message\",\r\n                      type: \"textarea\",\r\n                      hasLabel: false,\r\n                      placeholder: \"Write Your Message Here\",\r\n                      label: \"\"\r\n                    }\r\n                  }\r\n                />\r\n              </Col>\r\n              <Button type=\"submit\" id=\"contactFormSubmitButton\">Submit</Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { ContactContent } from './ContactContent';\r\nimport  { ContactModal } from './ContactModal';\r\n\r\n\r\nexport class ContactView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    }\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  toggleModal(){\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row className={\"contact-view\"}>\r\n        <div className={\"contact-filter\"}/>\r\n        <ContactModal\r\n          visible={this.state.modal}\r\n          toggleModal={this.toggleModal}\r\n        />\r\n        <ContactContent toggleModal={this.toggleModal}/>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DefaultView } from './Views/DefaultView';\r\nimport { AboutMe } from './Views/AboutMe/AboutMe.jsx';\r\nimport { MobileAboutMe } from './Views/AboutMe/Mobile/MobileAboutMe.jsx';\r\nimport { SkillView } from './Views/Skillset/SkillView.jsx';\r\nimport { MobileSkillView } from './Views/Skillset/Mobile/MobileSkillView.jsx';\r\nimport { Portfolio } from './Views/Portfolio/Portfolio.jsx';\r\nimport { MobilePortfolio } from './Views/Portfolio/Mobile/MobilePortfolio.jsx';\r\nimport { ContactView} from './Views/Contact/ContactView';\r\n\r\nexport class Portal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeView: this.props.activeView,\r\n      setActiveView: this.props.setActiveView\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      screenSize: this.props.screenSize\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.activeView !== this.props.activeView){\r\n      this.setState({\r\n        activeView: this.props.activeView\r\n      });\r\n    }\r\n    if(this.state.screenSize !== this.props.screenSize){\r\n      this.setState({\r\n        screenSize: this.props.screenSize\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.props.activeView){\r\n      switch(`${this.props.activeView}`){\r\n        case \"DefaultView\":\r\n          return <DefaultView\r\n                   setActiveView={this.state.setActiveView}\r\n                   screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                 />;\r\n        case \"AboutMeView\":\r\n          if(this.props.screenSize === \"small\" || this.props.screenSize === \"xsmall\"){\r\n            return <MobileAboutMe\r\n                     screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                   />\r\n          }\r\n          return <AboutMe\r\n                    screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                 />;\r\n        case \"SkillView\":\r\n          if(this.props.screenSize === \"small\" || this.props.screenSize === \"xsmall\"){\r\n            return <MobileSkillView\r\n                      screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                   />\r\n          }\r\n          return <SkillView\r\n                    screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                 />\r\n        case \"PortfolioView\":\r\n          if(this.props.screenSize === \"small\" || this.props.screenSize === \"xsmall\"){\r\n            return <MobilePortfolio\r\n                      screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                   />\r\n          }\r\n          return <Portfolio\r\n                    screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                 />\r\n        case \"ContactView\":\r\n          return <ContactView\r\n                    screenSize={this.state.screenSize !== undefined ? this.state.screenSize : null}\r\n                 />\r\n        default:\r\n          return <div>Something broke</div>\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPortal.propTypes = {\r\n  activeView: PropTypes.string.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Container } from 'reactstrap';\r\nimport './index.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Portal } from './Portal';\r\n\r\nconst helpers = require('./helpers.js');\r\n\r\n//TODO\r\n// add skill logos to button/objects\r\n// About Me: update content where needed | Make mobile modal close button work | fix styling for about me nav item buttons\r\n// Standardize modal close buttons\r\n// *** Skills: finish adding content | fix skills-modal-close-button styling | reduce font-size for skill-modal body text & decrease horizontal padding | skills-modal-close-button has no onClick listener\r\n// Portfolio: style modal elements smaller screens / add content\r\n// Contact: replace github and linkedin text with icons\r\n\r\nclass App extends Component {\r\n  // MAKE SURE YOU PASS PROPS IF YOU LOAD FROM SERVER.....\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      activeView: \"DefaultView\",\r\n      isHome: true,\r\n      classes: \"App\",\r\n      filter: \"body-filter filter-on\",\r\n      pulse: \"pulse\",\r\n      isOpen: false,\r\n      screenSize: helpers.determineScreenSize()\r\n    }\r\n    this.setActiveView = this.setActiveView.bind(this);\r\n    this.checkSize = this.checkSize.bind(this);\r\n    this.toggleOpen = this.toggleOpen.bind(this);\r\n  }\r\n\r\n  toggleOpen(){\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  setActiveView(view){\r\n    let isHome = (view === \"DefaultView\")\r\n    let classes, pulse, filter;\r\n\r\n    if(isHome){\r\n      classes = `App transition`;\r\n      filter = \"body-filter filter-on\";\r\n      pulse = \"pulse\"\r\n    } else {\r\n      classes=\"App\";\r\n      filter = \"body-filter\";\r\n      pulse = \"\"\r\n    }\r\n    this.setState({\r\n      activeView: `${view}`,\r\n      isHome: isHome,\r\n      classes: classes,\r\n      filter: filter,\r\n      pulse: pulse\r\n    });\r\n  }\r\n\r\n  checkSize(){\r\n    console.log(\"resize\")\r\n    let screenSize = helpers.determineScreenSize();\r\n    if(screenSize !== this.state.screenSize){\r\n      this.setState({\r\n        screenSize: screenSize\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.onresize = this.checkSize;\r\n    setTimeout(()=>{\r\n      this.setState({isOpen: !this.state.isOpen})\r\n    }, 300)\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className={this.state.classes}>\r\n        <div className={this.state.filter}/>\r\n        <div className={`header-container`} onClick={()=>{this.setActiveView(\"DefaultView\")}}>\r\n          <header className={`App-header ${this.state.pulse}`}>\r\n          taylor mosier\r\n          </header>\r\n        </div>\r\n        <TransitionGroup component={null}>\r\n          { this.state.isOpen && (\r\n            <CSSTransition classNames=\"main-transition\" timeout={300}>\r\n              <Portal\r\n                screenSize={this.state.screenSize}\r\n                activeView={this.state.activeView}\r\n                setActiveView={this.setActiveView}\r\n              />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport './keyframes.css';\r\nimport './large.css';\r\nimport './medium.css';\r\nimport './small.css';\r\nimport './smaller.css';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}